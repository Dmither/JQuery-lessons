Підключення JQuery: https://jquery.com/download/ 
    Download the compressed - файл стиснутої бібліотеки jquery-min.js
    Перед закриттям body пізключаємо через script:src
    Після неї підключається скрипт сторінки

Для використання jquery в js є ф-я jquery(); або $();
Звернутись до DOM-об'єкта напряму: $('.item');
    простіше за тегом, класом, ідинтифікатором (li, .item, #first-item)
Звернутись до об'єкта через інший: $('nav menu') вибере вкладений,
    $('nav>menu') вибере дочірній menu до nav, 
    $('.logo + menu') вибере menu наступний після .logo
    $('img, a, .obj') вибере елементи по кількох селекторах
Звернутись до об'єкта за атрибутом: $('img[alt=Tower]') повний,
    $('img[src^=img/]') починається, $('img[src$=.png]') закінчується
    $('img[src*=logo]') має підстроку
    $('img[alt]) має атрибут взагалі
В інструментах розробника можна скопіювати повний селектор з дерева
Фільтрація виборок: $('li:even/odd') всі парні/непарні індекси,
    $('img:not(.logo img)') всі крім вказаного, 
    $('li:has(a)') всі li, що містять a,
    $('p:contains(client)') всі p зі словом "client", 
    $('li:first/last') перший/останній li,
    $('div:hidden/visibility') всі приховані/видимі
Для того, підключати скрипти в head документа та код виконувався після
    прогрузки всього html-документа, код вписуємо в функцію:
    $(document).ready(function(){
        ...
    }) або 
    $(function(){
        ...
    }).

Фільтрація елементів форм: $(':checkbox')
    перед фільтром можна конкретно вказати форму $('.form1 :radio')
    :checkbox, :radio, :submit, :reset, :file, :button, 
    :text, :password, :input та інші
Фільтрація стану елементів форм: $('.form1 :radio:checked'),
    $('.form1 :checkbox:checked'), $('.form1 :selected')
Робота зі значенням полів форм: 
    $('textarea').val() поверне значення для input, textarea
    $('select1 :selected').val() поверне атрибут value із option

Записати значення в змінну: let variable = $('.class tag');

Показати/приховати об'єкт за певний час:
    obj.hide(t)/show(t) - приховує/показує
    obj.fadeOut(t)/fadeIn(t) вісвітлює/проявляє об'єкт
    obj.fadeTo(t, opacity) задає opacity
    obj.slideUp(t)/slideDown(t) згортає/розгортає об'єкт

Ф-ї можна викликати по ланцюгу: obj.hide(ms).show(ms);
Для групи об'єктів є автоцикли: $(objects).hide(ms); - для всіх object

$(paragraph).text() повертає текст параграфа, записує аргумент str
obj.width()/height() повертає/записує ширину/висоту (аргумент)
obj.html() повертає/перезаписує html-код всередині об'єкта

Робота з аргументами об'єкта:
    obj.attr('src') повертає/додає/перезаписує атрибут 'src'
        для зміни другий аргумент: attr('src', 'img/logo.png')
    obj.removeAttr('src') видаляє атрибут 'src'
Робота з класами об'єкта:
    obj.addClass(class) додає клас
    obj.removeClass(class) видаляє клас
    obj.toggleClass(class) видаляє/додає якщо є/немає (перемикач)
Робота зі стилями об'єкта:
    obj.css('color') - повертає значення властивості color css
    obj.css('color', '#333366') - змінює значення властивості
    obj.css({'color': '#336', 'padding': '10px'}) кілька властивостей
Робота з анімаціями: зміна стилів за певний час
    obj.animate({'color': #336}, 3000) змінить за 3000ms

Додати html-код:
    obj.before('<span>Code</span>') перед об'єктом
    obj.after('<span>Code</span>') після об'єкта
    obj.prepend('<span>Code</span>') напочатку в об'єкті
    obj.append('<span>Code</span>') вкінці в об'єкті

Ручні цикли: $('.icons img').each(function(){..}) перебере всі елементи
    if($(this) ...) - умова для перевірки в циклі
Кількість елементів в виборці: $('div').length

Клонування елементів: obj.clone()
    let obj = $('.elem').clone() - клонує об'єкт для подальшої вставки
        .remove() - клонує і видаляє
    об'єкти після клонування можна вставляти як html-код

Події: obj.event(function(){}) виконує function при event в obj
    mouseover - наведення миші      mouseout - зняття миші
    hover - наведення і зняття (має дві функції через ",")
    click - клік (down+up)          mousemove - рух мишею
    mousedown - натискання          mouseup - підняття кнопки миші
    submit - спрацювання кнопки з типом submit, reset - з типом reset
    focus - фокусуванні, blur - розфокусуванні, change - зміні поля
    keydown, keyup, keypress (down+up) - для клавіш клавіатури
    load - загрузка елементів       resize - зміна розміру вікна
    scroll - прокрутка вікна

    Традиційна модель подій
        в js: obj.event = func();
        в html: <p event="func()">
    Модель jquery
        obj.event(func)
Аргументом функції події є об'єкт події: obj.event(function(){e})
Відміна звичної поведінки (реакцій на події): e.preventDefault()
